{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","pagesCount","useMemo","Math","ceil","pages","className","classNames","disabled","href","onClick","prevPage","map","pageNum","active","handlePageChange","items","App","length","useState","itemsPerPage","setItemsPerPage","setCurrentPage","firstItem","lastItem","visibleItems","slice","id","onChange","event","target","value","defaultValue","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCIIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QAGI,IAFJC,mBAEI,MAFU,EAEV,EADJC,EACI,EADJA,aAEMC,EAAaC,mBAAQ,WACzB,OAAOC,KAAKC,KAAKP,EAAQC,KACxB,CAACD,EAAOC,IAELO,EAAQf,EAAW,EAAGW,GAkB5B,OACE,qBAAIK,UAAU,aAAd,UACE,oBACEA,UAAWC,IACT,YACA,CAAEC,SAA0B,IAAhBT,IAHhB,SAME,mBACE,UAAQ,WACRO,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBV,EACfW,QA7BqB,WACP,IAAhBX,GACFC,GAAa,SAAAW,GAAQ,OAAIA,EAAW,MAsBlC,oBAWDN,EAAMO,KAAI,SAAAC,GAAO,OAChB,oBACEP,UAAWC,IACT,YACA,CAAEO,OAAQD,IAAYd,IAH1B,SAOE,mBACE,UAAQ,WACRO,UAAU,YACVG,KAAI,WAAMI,GACVH,QAAS,kBAnCM,SAACG,GACxBb,EAAaa,GAkCUE,CAAiBF,IAJlC,SAMGA,KAREA,MAaT,oBACEP,UAAWC,IACT,YACA,CAAEC,SAAUT,IAAgBE,IAHhC,SAME,mBACE,UAAQ,WACRK,UAAU,YACVG,KAAK,QACL,gBAAeV,IAAgBE,EAC/BS,QA3DoB,WACtBX,IAAgBE,GAClBD,GAAa,SAAAW,GAAQ,OAAIA,EAAW,MAoDlC,wBC7EFK,EAAQ1B,EAAW,EAAG,IACzBsB,KAAI,SAAAlB,GAAC,qBAAYA,MAEPuB,EAAgB,WAC3B,IAAMpB,EAAQmB,EAAME,OACpB,EAAwCC,mBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAsCF,mBAAS,GAA/C,mBAAOpB,EAAP,KAAoBuB,EAApB,KAEMC,EAAYxB,EAAcqB,EAAeA,EAAe,EACxDI,EAAWzB,EAAcqB,EAAevB,EAC1CA,EACAE,EAAcqB,EAEZK,EAAeT,EAAMU,MAAMH,EAAY,EAAGC,GAOhD,OACE,sBAAKlB,UAAU,YAAf,UACE,uDAEA,oBAAGA,UAAU,OAAO,UAAQ,OAA5B,iBAEG,IACAP,EACA,IAJH,SAMGwB,EACA,IAPH,IASGC,EACA,IAVH,KAYG3B,EAZH,OAgBA,sBAAKS,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRqB,GAAG,kBACHrB,UAAU,eACVsB,SA/BV,SAA6BC,GAC3BR,GAAiBQ,EAAMC,OAAOC,OAC9BT,EAAe,IA8BPU,aAAcZ,EALhB,UAOE,wBAAQW,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOE,QAAQ,kBAAkB3B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACET,MAAOA,EACPC,QAASsB,EACTrB,YAAaA,EACbC,aAAc,SAACa,GAAD,OAAaS,EAAeT,MAG5C,6BACGY,EAAab,KAAI,SAAAsB,GAAI,OAAI,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YCxE1DC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.2d776b5c.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React, { useMemo } from 'react';\nimport classNames from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (pageNum: number | ((prevPage: number) => number)) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage = 1,\n  onPageChange,\n}) => {\n  const pagesCount = useMemo(() => {\n    return Math.ceil(total / perPage);\n  }, [total, perPage]);\n\n  const pages = getNumbers(1, pagesCount);\n\n  const handleBackwardButton = () => {\n    if (currentPage !== 1) {\n      onPageChange(prevPage => prevPage - 1);\n    }\n  };\n\n  const handleForwardButton = () => {\n    if (currentPage !== pagesCount) {\n      onPageChange(prevPage => prevPage + 1);\n    }\n  };\n\n  const handlePageChange = (pageNum: number) => {\n    onPageChange(pageNum);\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={classNames(\n          'page-item',\n          { disabled: currentPage === 1 },\n        )}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={handleBackwardButton}\n        >\n          «\n        </a>\n      </li>\n\n      {pages.map(pageNum => (\n        <li\n          className={classNames(\n            'page-item',\n            { active: pageNum === currentPage },\n          )}\n          key={pageNum}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${pageNum}`}\n            onClick={() => handlePageChange(pageNum)}\n          >\n            {pageNum}\n          </a>\n        </li>\n      ))}\n\n      <li\n        className={classNames(\n          'page-item',\n          { disabled: currentPage === pagesCount },\n        )}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === pagesCount}\n          onClick={handleForwardButton}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const total = items.length;\n  const [itemsPerPage, setItemsPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const firstItem = currentPage * itemsPerPage - itemsPerPage + 1;\n  const lastItem = currentPage * itemsPerPage > total\n    ? total\n    : currentPage * itemsPerPage;\n\n  const visibleItems = items.slice(firstItem - 1, lastItem);\n\n  function handlePerPageSelect(event: React.ChangeEvent<HTMLSelectElement>) {\n    setItemsPerPage(+event.target.value);\n    setCurrentPage(1);\n  }\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        Page\n        {' '}\n        {currentPage}\n        {' '}\n        (items\n        {firstItem}\n        {' '}\n        -\n        {lastItem}\n        {' '}\n        of\n        {total}\n        )\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={handlePerPageSelect}\n            defaultValue={itemsPerPage}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={total}\n        perPage={itemsPerPage}\n        currentPage={currentPage}\n        onPageChange={(pageNum) => setCurrentPage(pageNum)}\n      />\n\n      <ul>\n        {visibleItems.map(item => <li data-cy=\"item\" key={item}>{item}</li>)}\n      </ul>\n\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}